{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\14tasks\\\\taks\\\\src\\\\componets\\\\RefContRed.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useReducer, useRef } from \"react\";\nimport \"./RefContRed.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/React.createContext();\nconst initialState = {\n  count: 0\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        count: state.count + 1\n      };\n    case \"decrement\":\n      return {\n        count: state.count - 1\n      };\n    default:\n      throw new Error();\n  }\n}\nfunction Counter() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const countRef = useRef(0);\n  const increment = () => {\n    dispatch({\n      type: \"increment\"\n    });\n    countRef.current += 1;\n  };\n  const decrement = () => {\n    dispatch({\n      type: \"decrement\"\n    });\n    countRef.current += 1;\n  };\n  const value = {\n    count: state.count,\n    countRef\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n      value: value,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Count: \", state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increment,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrement,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Count, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"0r/zy290aPoZu/xV0/MRzBaq5q8=\");\n_c = Counter;\nfunction Count() {\n  _s2();\n  const {\n    count,\n    countRef\n  } = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Count using useRef: \", countRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s2(Count, \"yqBEcQTwxHCIjdkq/kq5XUyV3sI=\");\n_c2 = Count;\nfunction RefContRed() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c3 = RefContRed;\nexport default RefContRed;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Count\");\n$RefreshReg$(_c3, \"RefContRed\");","map":{"version":3,"names":["React","useContext","useReducer","useRef","jsxDEV","_jsxDEV","MyContext","createContext","initialState","count","reducer","state","action","type","Error","Counter","_s","dispatch","countRef","increment","current","decrement","value","className","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Count","_c","_s2","_c2","RefContRed","_c3","$RefreshReg$"],"sources":["D:/React/14tasks/taks/src/componets/RefContRed.js"],"sourcesContent":["import React, { useContext, useReducer, useRef } from \"react\";\r\nimport \"./RefContRed.css\";\r\n\r\nconst MyContext = React.createContext();\r\n\r\nconst initialState = {\r\n  count: 0,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return { count: state.count + 1 };\r\n    case \"decrement\":\r\n      return { count: state.count - 1 };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction Counter() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const countRef = useRef(0);\r\n\r\n  const increment = () => {\r\n    dispatch({ type: \"increment\" });\r\n    countRef.current += 1;\r\n  };\r\n\r\n  const decrement = () => {\r\n    dispatch({ type: \"decrement\" });\r\n    countRef.current += 1;\r\n  };\r\n\r\n  const value = { count: state.count, countRef };\r\n\r\n  return (\r\n    <div className=\"counter\">\r\n      <MyContext.Provider value={value}>\r\n        <h1>Counter</h1>\r\n        <h2>Count: {state.count}</h2>\r\n        <button onClick={increment}>Increment</button>\r\n        <button onClick={decrement}>Decrement</button>\r\n        <Count />\r\n      </MyContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Count() {\r\n  const { count, countRef } = useContext(MyContext);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Count using useRef: {countRef.current}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RefContRed() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Counter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RefContRed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}